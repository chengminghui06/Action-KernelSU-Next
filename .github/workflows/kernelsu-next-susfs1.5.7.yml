name: KernelSU Next with SUSFS 1.5.7
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8650'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus12_v'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'pineapple'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android14'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.1'
      BUILD_METHOD:
        description: "编译方式"
        required: true
        default: 'gki'
      KSUNEXT_ENABLED:
        description: "添加 KSU Next"
        required: true
        type: boolean
        default: true
      SUSFS_ENABLED:
        description: "添加 SUSFS"
        required: true
        type: boolean
        default: true
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 24576
          temp-reserve-mb: 8192
          swap-size-mb: 16384
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "build"
          git config --global user.email "263623064@qq.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl patch bc bison flex libssl-dev

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
          repo sync
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"

      - name: Set up KernelSU Next
        if: github.event.inputs.KSUNEXT_ENABLED == 'true'
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          cd KernelSU-Next
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Set up SUSFS 1.5.7
        if: github.event.inputs.SUSFS_ENABLED == 'true'
        run: |
          cd kernel_workspace
          # 使用新版 SUSFS 1.5.7 仓库
          git clone https://github.com/ShirkNeko/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/ShirkNeko/SukiSU_patch.git
          cd kernel_platform

          # 新增 LZ4KD 文件复制
          cp -r ../SukiSU_patch/other/lz4k/include/linux/* ./common/include/linux/
          cp -r ../SukiSU_patch/other/lz4k/lib/* ./common/lib/
          cp -r ../SukiSU_patch/other/lz4k/crypto/* ./common/crypto/

          # 复制 SUSFS 文件
          cp -r ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp -r ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp -r ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          # 应用基础补丁
          cd ./common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true

          # 应用 LZ4KD 补丁
          cp ../../SukiSU_patch/other/lz4k_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ./
          patch -p1 -F 3 < lz4kd.patch || true

          # 应用 syscall 补丁（1.5.7 新增）
          cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
          patch -p1 -F 3 < syscall_hooks.patch || true

          # 适配 KernelSU Next
          cd ..
          sed -i '/#include "selinux\/selinux.h"/a \
          bool ksu_vfs_read_hook = true;\
          bool ksu_execveat_hook = true;\
          bool ksu_input_hook = true;\
          EXPORT_SYMBOL(ksu_vfs_read_hook);\
          EXPORT_SYMBOL(ksu_execveat_hook);\
          EXPORT_SYMBOL(ksu_input_hook);' kernel/ksud.c || true
          sed -i '/#include <linux\/types.h>/a \
          extern bool ksu_vfs_read_hook;\
          extern bool ksu_execveat_hook;\
          extern bool ksu_input_hook;' kernel/ksud.h || true

          # 应用隐藏补丁
          cd common
          cp ../../SukiSU_patch/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch || true
          git add -A && git commit -a -m "BUILD: KernelSU Next + SUSFS 1.5.7"

      - name: Apply Kernel Configurations
        run: |
          cd kernel_workspace/kernel_platform
          # KernelSU 核心配置
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_WITH_KPROBES=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig

          # SUSFS 1.5.7 配置
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig

          # 禁用 config 检查
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Clean Dirty Suffix
        run: |
          cd kernel_workspace/kernel_platform
          sed -i 's/ -dirty//g' common/scripts/setlocalversion
          sed -i 's/ -dirty//g' msm-kernel/scripts/setlocalversion
          sed -i 's/ -dirty//g' external/dtc/scripts/setlocalversion
          sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' common/scripts/setlocalversion
          sed -i '$s|echo "\$res"|echo "\$res-murong"|' ./common/scripts/setlocalversion
          
          # LZ4KD 相关配置
          echo "CONFIG_ZSMALLOC=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_ZRAM=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZO=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          # 根据内核版本调整配置
          if [ "${{ github.event.inputs.KERNEL_VERSION }}" = "5.10" ]; then
            echo "CONFIG_ZRAM_DEF_COMP_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_MODULE_SIG=n" >> ./common/arch/arm64/configs/gki_defconfig
          fi

          # 6.1+ 内核特殊处理
          if [ "${{ github.event.inputs.KERNEL_VERSION }}" = "6.1" ] || [ "${{ github.event.inputs.KERNEL_VERSION }}" = "6.6" ]; then
            sed -i 's/CONFIG_ZSMALLOC=m/CONFIG_ZSMALLOC=y/g' ./common/arch/arm64/configs/gki_defconfig
            sed -i 's/CONFIG_ZRAM=m/CONFIG_ZRAM=y/g' ./common/arch/arm64/configs/gki_defconfig
          fi

      - name: Build Kernel
        run: |
          cd kernel_workspace
          export LTO=thin
          ./kernel_platform/build_with_bazel.py \
            -t ${{ github.event.inputs.CPUD }} \
            gki

      - name: Package AnyKernel3
        run: |
          git clone https://github.com/Numbersf/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          find ./kernel_workspace/kernel_platform/out -name "Image" -exec cp {} ./AnyKernel3/ \;

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: KernelSU_Next_1.5.7_${{ github.event.inputs.FEIL }}
          path: ./AnyKernel3/*